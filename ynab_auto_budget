#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ynab_auto_budget

Uses a budget template and the You Need a Budget (YNAB) API to suggest monthy
budget amounts. The YNAB currently does not support writing monthly budget
amounts, so that must be done manually.
"""

import sys
import os
import argparse
import json

import ynab


class YNABAutoBudgetError(Exception):
    """ Used for exceptions specific to this script """

    pass


def setup_ynab(credentials_filename):
    """ Get the user's credentials """

    configuration = ynab.Configuration()

    try:
        with open(os.path.expanduser(credentials_filename)) as cfile:
            credentials = json.load(cfile)

        configuration.api_key['Authorization'] = credentials['key']
        configuration.api_key_prefix['Authorization'] = credentials['prefix']
    except IOError as err:
        raise YNABAutoBudgetError('Unable to open credentials file:\n{}'\
                                  .format(err))
    except json.JSONDecodeError:
        raise YNABAutoBudgetError('Unable to parse credentials file {}'\
                                  .format(credentials_filename))
    except KeyError as err:
        raise YNABAutoBudgetError('Expected key {} not found in credentials '\
                                  'file {}'.format(err, credentials_filename))

    return configuration


def get_ynab_budget_categories(configurtion):
    """ Get the catagory names from the budget """

    pass


def main(arguments):
    """ Get YNAB budget, template, and display results """

    try:
        configuration = setup_ynab(arguments.credentials)

        categories = get_ynab_budget_categories(configuration)

        print(categories)
    except YNABAutoBudgetError as err:
        print(err)
        return 1

    return 0

if __name__ == '__main__':
    # Parse arguments with argparse
    formatter_class = argparse.ArgumentDefaultsHelpFormatter

    parser = argparse.ArgumentParser(description=__doc__,
                                     formatter_class=formatter_class)

    parser.add_argument('template',
                        help="Budget template file",
                        type=str)

    parser.add_argument('-c', '--credentials',
                        help="YNAB credentials file",
                        default='~/.ynab/ynab_credentials.json',
                        type=str)

    args = parser.parse_args(sys.argv[1:])

    # Call main() with parsed args
    sys.exit(main(args))
